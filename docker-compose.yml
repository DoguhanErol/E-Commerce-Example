version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      SECRET_KEY: "euc70ryld535pw+w&+r9s(y=dd89&9(^^o!hz(92trx@#a*a12"
      DEBUG: "True"
      DB_NAME: "e-commerce-db"
      DB_USER: "admin"
      DB_PASSWORD: "1234"
      DB_HOST: "db"
      DB_PORT: "5432"
      ALLOWED_HOSTS: "*"
      CORS_ALLOWED_ORIGINS: "http://localhost:5173"  # Frontend adresini ekleyin
    depends_on:
      - db
    volumes:
      - ./backend:/app
    command: python manage.py runserver 0.0.0.0:8000
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - app-network

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: "e-commerce-db"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "1234"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - /app/node_modules  # node_modules mount edilmesini engelle
    ports:
      - "5432:5432"
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
